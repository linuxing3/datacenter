// Code generated by goctl. DO NOT EDIT!
// Source: movie.proto

//go:generate mockgen -destination ./movie_mock.go -package movie -source $GOFILE

package movie

import (
	"context"

	"datacenter/movies/rpc/movie"

	"github.com/tal-tech/go-zero/zrpc"
)

type (
	MovieListResponse = movie.MovieListResponse
	MovieRequest      = movie.MovieRequest
	MovieResponse     = movie.MovieResponse

	Movie interface {
		Search(ctx context.Context, in *MovieRequest) (*MovieResponse, error)
		Create(ctx context.Context, in *MovieRequest) (*MovieResponse, error)
		Delete(ctx context.Context, in *MovieRequest) (*MovieResponse, error)
		Update(ctx context.Context, in *MovieRequest) (*MovieResponse, error)
	}

	defaultMovie struct {
		cli zrpc.Client
	}
)

func NewMovie(cli zrpc.Client) Movie {
	return &defaultMovie{
		cli: cli,
	}
}

func (m *defaultMovie) Search(ctx context.Context, in *MovieRequest) (*MovieResponse, error) {
	client := movie.NewMovieClient(m.cli.Conn())
	return client.Search(ctx, in)
}

func (m *defaultMovie) Create(ctx context.Context, in *MovieRequest) (*MovieResponse, error) {
	client := movie.NewMovieClient(m.cli.Conn())
	return client.Create(ctx, in)
}

func (m *defaultMovie) Delete(ctx context.Context, in *MovieRequest) (*MovieResponse, error) {
	client := movie.NewMovieClient(m.cli.Conn())
	return client.Delete(ctx, in)
}

func (m *defaultMovie) Update(ctx context.Context, in *MovieRequest) (*MovieResponse, error) {
	client := movie.NewMovieClient(m.cli.Conn())
	return client.Update(ctx, in)
}
