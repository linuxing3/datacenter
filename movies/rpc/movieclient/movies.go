// Code generated by goctl. DO NOT EDIT!
// Source: movie.proto

//go:generate mockgen -destination ./movies_mock.go -package movies -source $GOFILE

package movieclient

import (
	"context"

	"datacenter/movies/rpc/movie"

	"github.com/tal-tech/go-zero/zrpc"
)

type (
	MovieReq      = movie.MovieReq
	MovieListReq  = movie.MovieListReq
	MovieResp     = movie.MovieResp
	MovieListResp = movie.MovieListResp

	Movies interface {
		Movies(ctx context.Context, in *MovieReq) (*MovieListResp, error)
		Movie(ctx context.Context, in *MovieListReq) (*MovieResp, error)
	}

	defaultMovies struct {
		cli zrpc.Client
	}
)

func NewMovies(cli zrpc.Client) Movies {
	return &defaultMovies{
		cli: cli,
	}
}

func (m *defaultMovies) Movies(ctx context.Context, in *MovieReq) (*MovieListResp, error) {
	client := movie.NewMoviesClient(m.cli.Conn())
	return client.Movies(ctx, in)
}

func (m *defaultMovies) Movie(ctx context.Context, in *MovieListReq) (*MovieResp, error) {
	client := movie.NewMoviesClient(m.cli.Conn())
	return client.Movie(ctx, in)
}
